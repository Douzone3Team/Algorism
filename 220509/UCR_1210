import java.util.Arrays;
import java.util.Scanner;
 
public class Solution {
 
    //main 메소드
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int[][] map = new int[100][100];
         
        for(int t=0; t<10; t++) { //10개 테스트케이스
            int tNum = sc.nextInt();
            for(int i=0; i<map.length; i++)
                for(int j=0; j<map[0].length; j++)
                    map[i][j] = sc.nextInt();
            System.out.println("#"+tNum+" "+ladder(map));
        }
    }
     
    //사다리타기~
    public static int ladder(int[][] map) {
        int[][] trace = new int[100][100];
                 
        for(int x=0; x<map[0].length; x++) {//출발점
            int i=0; int j=x; //행,열 인덱스
            if(map[0][x]==1) {
                for(int a=0; a<trace.length; a++)
                    Arrays.fill(trace[a], 0);
                trace[0][x]=1;
                 
                while(i<map.length-1) { //바닥까지 go
                    //맨 왼쪽길일 때 (오른쪽 길만 체크)
                    if(j==0) {
                        if(map[i][j+1]==1 && trace[i][j+1]==0) {
                            j++;
                            trace[i][j]=1;
                            continue;
                        }
                    }
                    //맨 오른쪽길일 때 (왼쪽 길만 체크)
                    else if(j==map[0].length-1) {
                        if(map[i][j-1]==1 && trace[i][j-1]==0) {
                            j--;
                            trace[i][j]=1;
                            continue;
                        }
                    }
                    //***중간 길일 때(오른쪽, 왼쪽 길 모두 체크) (왔던 곳은 다시 가면 안 됨!)
                    else {             
                        if(map[i][j+1]==1 && trace[i][j+1]==0) {
                            j++;
                            trace[i][j]=1;
                            continue;
                        }
                        else if(map[i][j-1]==1 && trace[i][j-1]==0) {
                            j--;
                            trace[i][j]=1;
                            continue;
                        }  
                    }
                     
                    //왼쪽, 오른쪽 갈 경우를 제외하면 모두 아래로 go!
                    i++;
                    trace[i][j]=1;
                 
                }
                 
            }
            if(map[i][j]==2) return x; //사다리 걸렸다!
        }
         
        return 100;
    }
 
}
